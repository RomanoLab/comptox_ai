---
# Automates building and running pytest
name: ci-python-test

# Define the events that trigger the workflow
on:
  push:
    branches:
      # You can change the default value as needed
      - [$default-branch]
  workflow_dispatch:

# Define the jobs in the workflow
jobs:
  python-test:
    # Define the type of runner to use
    runs-on: ubuntu-latest

    # Define strategy for matrix builds
    strategy:
      matrix:
        # You can change the default value as needed
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      # Step: Check out the repository's code to the runner
      - name: checkout-code
        uses: actions/checkout@v3

      # Step: Set up Python environment
      - name: setup-python-env ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step: Install project dependencies using pip
      - name: install-dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install-e ".[dev]"
        # Modify the name inside the brackets to match the name of the
        # extras_require you would like to install.
        # There should be no whitespaces inside the brackets.
        # e.g. python -m pip install-e ".[dev,docs]"

      # Step: Run tests using pytest and output test results in JUnit, code
      # coverage in Cobertura
      - name: run-pytest
        run: |
          pytest --doctest-modules \
                 --junitxml=junit/test-results.xml \
                 --cov=com \
                 --cov-report=xml \
                 --cov-report=html

      # Step: Lint with flake8
      - name: run-flake8
        run: flake8 .
